version: 2

vm_settings: &vm_settings
  docker:
    # https://circleci.com/docs/2.0/circleci-images/#nodejs
    - image: circleci/node:latest-browsers
  working_directory: ~/app

install_restore_cache: &install_restore_cache
  name: Restore cached dependencies
  keys:
    - dependencies-{{ checksum "yarn.lock" }}
    # Fall back to using the latest cache if no exact match is found
    - dependencies

install_run: &install_run
  name: Install dependencies with Yarn, purely from the lockfile
  command: yarn install --frozen-lockfile

install_save_cache: &install_save_cache
  name: Cache installed dependencies
  paths:
    - ~/.cache
  key: dependencies-{{ checksum "yarn.lock" }}

jobs:

  build:
    <<: *vm_settings
    steps:
      - checkout

      # Install dependencies
      - restore_cache: *install_restore_cache
      - run: *install_run
      - save_cache: *install_save_cache

      - run:
          name: Build for production
          command: yarn build:ci

      # Store build artifacts
      - store_artifacts:
          path: dist

  deploy_develop:
    <<: *vm_settings
    steps:
      - run: ./node_modules/.bin/firebase use develop --token $FIREBASE_TOKEN
      - run: ./node_modules/.bin/firebase deploy --token $FIREBASE_TOKEN
  
  deploy_master:
    <<: *vm_settings
    steps:
      - run: ./node_modules/.bin/firebase use default --token $FIREBASE_TOKEN
      - run: ./node_modules/.bin/firebase deploy --token $FIREBASE_TOKEN

workflows:
  version: 2
  deploy_develop:
    jobs:
      - build
      - deploy_develop:
          requires:
            - build
          filters:
            branches:
              only: develop
  deploy_master:
    jobs:
      - deploy_master:
          requires:
            - build
          filters:
            branches:
              only: master
